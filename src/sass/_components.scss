.bar {
  height: 4vh;
  background-color: $color-gold;

  display: grid;
  // The min-content columns will be the red/blue with the middle being the leftover
  position: relative;

  &::before {
    content: '';
    position: absolute;
    top: 0;
    left: 50%;

    width: 1px;
    height: 140%;
    background-color: $color-gold;
    transform: translateX(-50%);
    z-index: 0;
  }

  &::after {
    content: attr(data-winner);
    position: absolute;
    color: $color-gold;
    font-size: 1.6rem;
    top: 145%;
    left: 50%;
    transform: translateX(-50%);
  }

  &__blue::after,
  &__red::after,
  &__none::after {
    content: attr(data-content);
    position: absolute;
    top: 47.5%;
  }

  &__blue {
    position: relative;
    background-color: $color-blue;

    &::after {
      transform: translate(-50%, -50%);
      right: 25%;
    }
  }
  &__red {
    position: relative;
    background-color: $color-red;

    &::after {
      transform: translate(50%, -50%);
      left: 25%;
    }
  }
  &__none {
    position: relative;

    &::after {
      transform: translate(-50%, -50%);
      left: 50%;
    }
  }
}

/* @keyframes outlineIn {
  from {
    outline: ;
  }
} */

.settings {
  border-right: 2px solid $color-gold;

  &__btn {
    cursor: pointer;
    padding: 1rem;
    background-color: $color-grey;

    transition: all 0.2s;

    // Normal button styles
    &--blue {
      background-color: $color-blue;
      &:hover {
        background-color: rgba($color: $color-blue, $alpha: 0.8);
      }
    }
    &--red {
      background-color: $color-red;
      &:hover {
        background-color: rgba($color: $color-red, $alpha: 0.8);
      }
    }

    // Selected button styles
    &--selected {
      border: 1rem solid $color-gold;

      &:hover {
        outline: none;
        // box-shadow: 0 2.5rem 4rem rgba($color-black, 0.5);
        z-index: 20;
      }
    }

    // Unselected button styles
    &--unselected {
      border: 1rem solid $color-grey-light;
      &:hover {
        outline: 1rem solid $color-gold;
        // box-shadow: 0 2.5rem 4rem rgba($color-black, 0.5);
        z-index: 20;
      }
      &:active {
        transition: 0.25s outline 0s cubic-bezier(0.83, 0.23, 1, 0.25),
          0.2 border 0.5s;
        outline: 0rem solid $color-gold;

        border: 1rem solid $color-gold; // Because we want to see the border change right as the outline is lessening
      }
    }
  }
}

.map {
  // transform: translateX(-5.5%);

  &__state {
    stroke: $color-gold;
    stroke-linejoin: round;
    stroke-width: 0.971px;

    transition: all 0.4s;

    cursor: pointer;

    &.blue:hover {
      fill: rgba($color: $color-blue, $alpha: 0.8);
    }
    &.red:hover {
      fill: rgba($color: $color-red, $alpha: 0.8);
    }
    &.none:hover {
      fill: rgba($color: $color-gold, $alpha: 0.6);
    }
  }

  /*   &__population {
    opacity: calc(attr(data-points) / 100);
  } */
}

/* .states {
  display: grid;
  grid-template-columns: 1fr;
  justify-items: center;
  align-items: center;
} */
